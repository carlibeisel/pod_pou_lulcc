data <- data[-c(1,6,37,38)] # drops Python index output with csv
data <- subset(data, select=-c(Month, DayofYear, Irrigation.Year, Sum, Diversion..cfs.))
data['Mar_et'][is.na(data['Mar_et'])] <- 0 #fill NA et values with 0
data['contagion'][is.na(data['contagion'])] <- 100 # fill NA contagion values with 100
nas <- data[rowSums(is.na(data)) > 0, ] #check for any data with remaining NA values
data <- na.omit(data)
scale2sd <- function(x){
(x - mean(x))/(sd(x)*2)
}
col_name <- c('ant_prcp',
'irrig_prcp',
'irrig_temp',
'JuneAug_temp',
'Mar_tmp',
'Mar_prcp',
'LP_inflows',
'Max_Fill',
'Carryover',
'AF_used',
'AF_remaining',
'AF_available')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- scale2sd(data[,i])
}
col_name <- c('class1_urban',
'class2_crops',
'contagion',
'largest_patch_index')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- (data[,i])/100
}
tt <- table(data$Name)
data <- subset(data, Name %in% names(tt[tt>4]))
install.packages('corrplot')
library(corrplot)
install.packages('tidyverse')
remove.packages('tidyverse')
install.packages('tidyverse')
library(dplyr)
library(tidyverse)
library(ggplot2)
install.packages('GGally')
library(GGally)
install.packages('ggfortify')
library(ggfortify)
remove.packages('dplyr')
install.packages('dplyr')
install.packages('Kendall')
library(Kendall)
install.packages("dplyr")
# Without zeros
data <- data.frame(read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/input_full_050924.csv'))
data <- data[-c(1,6,37,38)] # drops Python index output with csv
data <- subset(data, select=-c(Month, DayofYear, Irrigation.Year, Sum, Diversion..cfs.))
data['Mar_et'][is.na(data['Mar_et'])] <- 0 #fill NA et values with 0
data['contagion'][is.na(data['contagion'])] <- 100 # fill NA contagion values with 100
nas <- data[rowSums(is.na(data)) > 0, ] #check for any data with remaining NA values
data <- na.omit(data)
# With zeros data
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input_050324.csv')
# With zeros data
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input_050324.csv')
# With zeros data
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input_050924.csv')
data <- data[!duplicated(data[c('Name', 'Year')]),] #remove duplicates
scale2sd <- function(x){
(x - mean(x))/(sd(x)*2)
}
col_name <- c('ant_prcp',
'irrig_prcp',
'irrig_temp',
'JuneAug_temp',
'Mar_tmp',
'Mar_prcp',
'LP_inflows',
'Max_Fill',
'Carryover',
'AF_used',
'AF_remaining',
'AF_available')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- scale2sd(data[,i])
}
col_name <- c('class1_urban',
'class2_crops',
'contagion',
'largest_patch_index')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- (data[,i])/100
}
tt <- table(data$Name)
data <- subset(data, Name %in% names(tt[tt>4]))
# For data with zeros
write.csv(data, '/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/input_full_050924.csv', row.names = FALSE)
data$perc_used <- ifelse(data$AF_available > 0, data$AF_used/data$AF_available, NA)
data$wr_storage <- ifelse(data$AF_available >0, 1, 0)
write.csv(data, '/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input.csv', row.names = FALSE)
install.packages('corrplot')
library(corrplot)
install.packages('tidyverse')
remove.packages('tidyverse')
install.packages('tidyverse')
library(dplyr)
library(tidyverse)
library(ggplot2)
install.packages('GGally')
library(GGally)
install.packages('ggfortify')
library(ggfortify)
remove.packages('dplyr')
install.packages('dplyr')
install.packages('Kendall')
library(Kendall)
install.packages("dplyr")
# Without zeros
data <- data.frame(read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/input_full_013023.csv'))
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/acreft_hist_whole.pdf',
width=4,
height=4)
hist(data$Acre_feet,
breaks=15,
prob=TRUE,
col='lightblue',
xlab='Discharge (Acre-ft/yr)',
main = 'Distribution of Annual Discharge',
ylim=c(0, 1.0e-04))
lines(density(data$Acre_feet),
col='black',
lwd=2)
dev.off()
pdf(file='~/Desktop/diversion_models/Figures/acreft_hist_whole.pdf',
width=4,
height=3)
ggplot(data=data)+
aes(x=Acre_feet)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw() +
theme(text = element_text(size = 20))
library(ggplot2)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/acreft_hist_whole.pdf',
width=4,
height=4)
hist(data$Acre_feet,
breaks=15,
prob=TRUE,
col='lightblue',
xlab='Discharge (Acre-ft/yr)',
main = 'Distribution of Annual Discharge',
ylim=c(0, 1.0e-04))
lines(density(data$Acre_feet),
col='black',
lwd=2)
dev.off()
pdf(file='~/Desktop/diversion_models/Figures/acreft_hist_whole.pdf',
width=4,
height=3)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/acreft_hist_whole.pdf',
width=4,
height=3)
ggplot(data=data)+
aes(x=Acre_feet)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw() +
theme(text = element_text(size = 20))
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/start_hist.pdf',
width=6,
height=4)
hist(data$StartDayofYear,
breaks=15,
prob=T,
col='lightblue',
xlab='Start Day of Year',
main='Distribution of the Beginning of the Irrigation Season',
ylim=c(0,0.05))
lines(density(data$StartDayofYear),
col='red',
lwd=2)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/end_hist.pdf',
width=6,
height=4)
hist(data$EndDayofYear,
breaks=15,
prob=T,
col='lightblue',
xlab='End Day of Year',
main='Distribution of the last day of the irrigation season',
ylim=c(0,0.09))
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/length_hist.pdf',
width=6,
height=4)
data$Time <- as.numeric(data$Time)
ggplot(data=data)+
aes(x=Time)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Length of Irrigation Season (days)')+
theme_bw() +
theme(text = element_text(size=13, family = 'Arial'))
plot(data$irrig_temp, data$et)
for (i in names) {
sub_data <- subset(data, Name == i)
print(ggplot(data=sub_data) +
aes(x=irrig_temp, y=et, color= irrig_prcp)+
geom_point()+
theme_bw()+
ggtitle(i) +
xlab('Avg Maximum Irrigation Season Temp (C)')+
ylab('Avg Total Evapotranspiration (m)') +
labs(color=guide_legend(title='Precipitation (mm)')))
}
plot(data$JuneAug_temp, data$Acre_feet)
for (i in names) {
sub_data <- subset(data, Name == i)
print(ggplot(data=sub_data) +
aes(x=JuneAug_temp, y=Acre_feet, color= irrig_prcp)+
geom_point()+
theme_bw()+
ggtitle(i) +
xlab('Avg Maximum June-Aug Temp (C)')+
ylab('Total Discharge (AF/yr)') +
labs(color=guide_legend(title='Precipitation (mm)')))
}
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/JAtemp_v_year.pdf',
width=6,
height = 5)
ggplot(data=diversions)+
aes(x=Year, y=JuneAug_temp)+
geom_point()+
theme_bw()+
ggtitle('Summer Temperatures through Time')+
xlab('Year') +
ylab('Average Maximum June-Aug Temp (C)')
install.packages('corrplot')
library(corrplot)
install.packages('tidyverse')
remove.packages('tidyverse')
install.packages('tidyverse')
library(dplyr)
library(tidyverse)
library(ggplot2)
install.packages('GGally')
library(GGally)
install.packages('ggfortify')
library(ggfortify)
remove.packages('dplyr')
install.packages('dplyr')
install.packages('Kendall')
library(Kendall)
install.packages("dplyr")
# Without zeros
data <- data.frame(read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/input_full_013023.csv'))
data <- data[-c(1,6,37,38)] # drops Python index output with csv
data <- subset(data, select=-c(Month, DayofYear, Irrigation.Year, Sum, Diversion..cfs.))
data['Mar_et'][is.na(data['Mar_et'])] <- 0 #fill NA et values with 0
data['contagion'][is.na(data['contagion'])] <- 100 # fill NA contagion values with 100
nas <- data[rowSums(is.na(data)) > 0, ] #check for any data with remaining NA values
data <- na.omit(data)
# With zeros data
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input_013023.csv')
data <- data[!duplicated(data[c('Name', 'Year')]),] #remove duplicates
scale2sd <- function(x){
(x - mean(x))/(sd(x)*2)
}
col_name <- c('ant_prcp',
'irrig_prcp',
'irrig_temp',
'JuneAug_temp',
'Mar_tmp',
'Mar_prcp',
'LP_inflows',
'Max_Fill',
'Carryover',
'AF_used',
'AF_remaining',
'AF_available')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- scale2sd(data[,i])
}
col_name <- c('class1_urban',
'class2_crops',
'contagion',
'largest_patch_index')
for (i in col_name) {
name <- colnames(data[i])
new_col_name <- paste('scale_', name, sep = "")
data[new_col_name] <- (data[,i])/100
}
tt <- table(data$Name)
data <- subset(data, Name %in% names(tt[tt>4]))
# For data with zeros
write.csv(data, '/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/input_full_013023.csv', row.names = FALSE)
data$perc_used <- ifelse(data$AF_available > 0, data$AF_used/data$AF_available, NA)
data$wr_storage <- ifelse(data$AF_available >0, 1, 0)
write.csv(data, '/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/mixed_model_input_013023.csv', row.names = FALSE)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/acreft_hist_whole.pdf',
width=4,
height=4)
hist(data$Acre_feet,
breaks=15,
prob=TRUE,
col='lightblue',
xlab='Discharge (Acre-ft/yr)',
main = 'Distribution of Annual Discharge',
ylim=c(0, 1.0e-04))
lines(density(data$Acre_feet),
col='black',
lwd=2)
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/acreft_hist_whole.pdf',
width=4,
height=3)
ggplot(data=data)+
aes(x=Acre_feet)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw() +
theme(text = element_text(size = 20))
dev.off()
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figures/start_hist.pdf',
width=6,
height=4)
library(ggplot2)
## IMPORT PACKAGES ##
## --------------- ##
library(plyr)
library(dplyr)
library(Matrix)
library(tidyverse)
library(readr)
library(ggplot2)
library(tibble)
library(ggrepel)
library(flexmix)
library(modelr)
install.packages('paletteer')
library(paletteer)
install.packages('ggpubr')
library(ggpubr)
library(Kendall)
source("http://peterhaschke.com/Code/multiplot.R")
## INPUT THE DATA ##
## -------------- ##
data <- read.csv('/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Data.Inputs/model_input.csv')
na_data <- data[is.na(data)] # Check for NA data in the file
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figure2/acreft_hist.pdf',
width=6,
height=4)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figure2/SD_AF_hist.pdf',
width=6,
height=4)
ggplot(data=data)+
aes(x=SD_AF)+
geom_histogram(color='black')+
ylab('Count')+
xlab('Annual Discharge (AF/yr)')+
theme_bw()
urb_change <- data %>%
select(Name, class1_urban, Sum_AF) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum_AF))
urb_change <- data %>%
select(Name, class1_urban, Sum) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum_AF))
urb_change <- data %>%
select(Name, class1_urban, Sum) %>%
group_by(Name) %>%
summarize(change = max(class1_urban) - min(class1_urban),
maximum = max(class1_urban),
AF = mean(Sum))
names <- unique(data$Name)
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = Year, y = Sum_AF) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
ggtitle(i))
}
names <- unique(data$Name)
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = Year, y = Sum) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
ggtitle(i))
}
for (i in names){
subdata <- subset(data, Name == i)
print(ggplot(data = subdata) +
aes(x = class1_urban, y = Sum) +
geom_point() +
geom_smooth(method = 'lm', color = '#00798c', fill = '#00798c') +
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ggtitle(i))
}
paletteer_d("colorBlindness::Blue2DarkOrange12Steps")
pal <- paletteer_d("colorBlindness::paletteMartin")
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figure2/regress.pdf',
width=8,
height=5)
pdf(file='/Users/dbeisel/Desktop/DATA/Bridget/pod_pou_lulcc/Figure2/regress.pdf',
width=8,
height=5)
ggplot(data = data) +
aes(x = class1_urban, y = Sum, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Urban Proportion') +
ylab('Discharge (AF)') +
ylim(0, 120000)
dev.off()
ggplot(data = data) +
aes(x = Year, y = Sum_AF, fill = Name, color=Name) +
geom_point() +
scale_shape(solid = FALSE) +
geom_smooth(method = 'lm', aes(color = Name, fill = Name)) +
scale_fill_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF')) +
scale_color_manual(values =c('#000000FF',
'#004949FF',
'#009292FF',
'#FF6DB6FF',
'#FFB6DBFF',
'#490092FF',
'#006DDBFF',
'#B66DFFFF',
'#6DB6FFFF',
'#B6DBFFFF',
'#920000FF',
'#924900FF',
'#DB6D00FF',
'#31A354',
'#FFAD65FF'))+
theme_bw() +
xlab('Year') +
ylab('Discharge (AF)') +
coord_cartesian(ylim =c(0, 120000))
